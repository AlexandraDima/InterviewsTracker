{"version":3,"sources":["components/Navbar.js","components/CreateCompany.js","components/CompaniesList.js","components/EditCompany.js","components/CreateQuestion.js","components/EditQuestion.js","components/QuestionList.js","components/QuestionsList.js","App.js","index.js"],"names":["Navbar","props","state","menu","toggleMenu","bind","this","setState","show","className","to","type","onClick","Component","CreateCompany","onClose","e","onChangeUserLocation","onChangeCompanyName","onChangePositionName","onChangeJobPosting","onChangeJobDescription","onChangeApplied","onChangeDateApplied","onChangeDateDeadline","onChangeProgress","onChangeCompanyAddress","onSubmit","userLocation","companyName","positionName","jobPosting","jobDescription","applied","dateApplied","Date","dateDeadline","progress","companyAddress","users","progressOptions","axios","get","then","response","data","length","catch","error","console","log","target","value","date","preventDefault","company","post","res","window","location","children","Modal","size","Header","Title","aria-hidden","Body","required","onChange","selected","map","key","_id","Company","useState","substring","distance","duration","deleteCompany","CompaniesList","showModal","companies","currentCompany","id","delete","filter","title","companiesList","EditCompany","match","params","appliedValues","progressValues","CreateQuestion","onChangeQuestion","onChangeAnswer","question","answer","placeholder","EditQuestion","handleClose","onShow","QuestionList","showEditQuestion","questions","Questions","App","path","exact","component","QuestionsList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.90e151fe.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport default class Navbar extends Component{\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      menu: false\r\n    };\r\n    this.toggleMenu = this.toggleMenu.bind(this);\r\n  }\r\n\r\n  toggleMenu(){\r\n    this.setState({menu: !this.state.menu})\r\n  }\r\n\r\n    render(){\r\n      const show = this.state.menu ? \"show\" : \"\";\r\n        return(\r\n          <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n            <div className=\"container\">\r\n              <Link className=\"navbar-brand text-white\" to=\"/\">Interview Tracker</Link>\r\n              <button className=\"navbar-toggler\" type=\"button\" onClick={this.toggleMenu}>\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n        \r\n          <div className={` collapse navbar-collapse + ${show}`} >\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item active\">\r\n                <Link className=\"nav-link text-white\" to=\"/\">Logs</Link>\r\n              </li>\r\n            {/*   <li className=\"nav-item\">\r\n              <Link className=\"nav-link text-white\" to=\"/users\">Users</Link>\r\n              </li> */}\r\n              <li className=\"nav-item\">\r\n              <Link className=\"nav-link text-white\" to=\"/questions\">Questions</Link>\r\n              </li>\r\n          \r\n            </ul>\r\n       \r\n          </div>\r\n          </div>\r\n        </nav>\r\n        \r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\nimport {Modal} from \"react-bootstrap\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\n\r\n\r\nexport default class CreateCompany extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        //binding this to the properties from the state\r\n\r\n     /*    this.onChangeUsername = this.onChangeUsername.bind(this); */\r\n        this.onChangeUserLocation = this.onChangeUserLocation.bind(this);\r\n        this.onChangeCompanyName = this.onChangeCompanyName.bind(this);\r\n        this.onChangePositionName = this.onChangePositionName.bind(this);\r\n        this.onChangeJobPosting = this.onChangeJobPosting.bind(this);\r\n        this.onChangeJobDescription = this.onChangeJobDescription.bind(this);\r\n        this.onChangeApplied = this.onChangeApplied.bind(this);\r\n        this.onChangeDateApplied = this.onChangeDateApplied.bind(this);\r\n        this.onChangeDateDeadline = this.onChangeDateDeadline.bind(this);\r\n        this.onChangeProgress = this.onChangeProgress.bind(this);\r\n        this.onChangeCompanyAddress = this.onChangeCompanyAddress.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        this.onClose = this.onClose.bind(this); \r\n       // this.setShow = this.setShow.bind(this);\r\n    \r\n        //set the initial state of the component by assigning an object to this.state\r\n        //create properties inside the state that correspond to the properties from MOngoDB\r\n        this.state = {\r\n        /*     username: '', */\r\n            userLocation:'',\r\n            companyName:'',\r\n            positionName:'',\r\n            jobPosting:'',\r\n            jobDescription:'',\r\n            applied:false,\r\n            dateApplied:new Date(),\r\n            dateDeadline:new Date(),\r\n            progress:'waiting',\r\n            companyAddress:'',\r\n            users:[],\r\n            progressOptions:[],\r\n        }\r\n    }\r\n\r\n    //add a lifecicle method to be called before the other methods are being called\r\n    //call the users\r\n    componentDidMount(){\r\n        /*Set testing data before calling the api\r\n        this.setState({\r\n            users: ['test user'],\r\n            username:'test user'\r\n        })**/\r\n        //get the list of users\r\n   /*      axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                if (response.data.length > 0){\r\n                    this.setState({\r\n                        users: response.data.map(user => user.username),\r\n                        username: response.data[0].username\r\n                    })\r\n                \r\n                }\r\n            }) */\r\n        \r\n        //get the list of progress options\r\n        axios.get('/progressOptions/')\r\n        .then(response => {\r\n            if (response.data.length > 0){\r\n                this.setState({\r\n                    progressOptions: response.data,\r\n                })\r\n            }\r\n        })\r\n        .catch(function (error) {\r\n              console.log(error);\r\n        })\r\n   \r\n  \r\n    }\r\n\r\n  \r\n    //when the form inputs are changed, the properties from the state will be updated\r\n  /*   onChangeUsername(e){\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    } */\r\n\r\n    onChangeUserLocation(e){\r\n        this.setState({\r\n            userLocation: e.target.value\r\n        });\r\n    }\r\n\r\n    onChangeCompanyName(e){\r\n        this.setState({\r\n            companyName: e.target.value\r\n        });\r\n    }\r\n    onChangePositionName(e){\r\n        this.setState({\r\n            positionName: e.target.value\r\n        });\r\n    }\r\n    onChangeJobPosting(e){\r\n        this.setState({\r\n            jobPosting: e.target.value\r\n        });\r\n    }\r\n    onChangeJobDescription(e){\r\n        this.setState({\r\n            jobDescription: e.target.value\r\n        });\r\n    }\r\n    onChangeApplied(e){\r\n        this.setState({\r\n            applied: e.target.value\r\n        });\r\n    }\r\n    onChangeDateApplied(date){\r\n        this.setState({\r\n            dateApplied: date\r\n        });\r\n    }\r\n    onChangeDateDeadline(date){\r\n        this.setState({\r\n            dateDeadline: date\r\n        });\r\n    }\r\n    onChangeProgress(e){\r\n        this.setState({\r\n            progress: e.target.value\r\n        });\r\n    }\r\n    onChangeCompanyAddress(e){\r\n        this.setState({\r\n            companyAddress: e.target.value\r\n        });\r\n    }\r\n   \r\n     \r\n\r\n    //on submit form\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const company = {\r\n         /*    username:this.state.username, */\r\n            userLocation:this.state.userLocation,\r\n            companyName:this.state.companyName,\r\n            positionName:this.state.positionName,\r\n            jobPosting:this.state.jobPosting,\r\n            jobDescription:this.state.jobDescription,\r\n            applied:this.state.applied,\r\n            dateApplied:this.state.dateApplied,\r\n            dateDeadline:this.state.dateDeadline,\r\n            progress:this.state.progress,\r\n            companyAddress:this.state.companyAddress,\r\n        }\r\n        console.log(company);\r\n        axios.post('/companies/add', company)\r\n              .then(res => console.log(res.data));\r\n\r\n        //once the user submits a company, he will be redirected to the home page\r\n        window.location = '/';\r\n    }\r\n\r\n  //Close the modal\r\n        onClose = e => {\r\n            this.props.onClose && this.props.onClose(e);\r\n          };\r\n\r\n    render(){\r\n        if(!this.props.show){\r\n            return null;\r\n        }\r\n        return(\r\n            <div>\r\n             {this.props.children}\r\n          \r\n           \r\n            <Modal  show={true} size=\"lg\">\r\n        \r\n             <div className=\"container\">\r\n             <Modal.Header>\r\n           \r\n               <Modal.Title><h1>Add a company log</h1></Modal.Title>\r\n               <i className=\"fa fa-times fa-2 cursorPointer\" aria-hidden=\"true\" onClick={this.onClose}></i>\r\n               </Modal.Header>\r\n               <Modal.Body>\r\n            <form onSubmit={this.onSubmit}>\r\n                \r\n                  {/*   <div className=\"form-group\"> \r\n                    <label>Username: </label>\r\n                    <select \r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.username}\r\n                        onChange={this.onChangeUsername}>\r\n                        {\r\n                            this.state.users.map((user) =>\r\n                             <option key={user} value={user}>{user}</option>\r\n                            )\r\n                        }\r\n                    </select>\r\n                    </div> */}\r\n                    \r\n                    <div className=\"form-group\"> \r\n                    <label>Company name: </label>\r\n                    <input  type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.companyName}\r\n                        onChange={this.onChangeCompanyName}\r\n                        />\r\n                    </div>\r\n                \r\n                    <div className=\"form-group\">\r\n                    <label> Position name:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        value={this.state.positionName}\r\n                        onChange={this.onChangePositionName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label> Job Posting:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        value={this.state.jobPosting}\r\n                        onChange={this.onChangeJobPosting}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label> Job description:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        value={this.state.jobDescription}\r\n                        onChange={this.onChangeJobDescription}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Date applied: </label>\r\n                    <div>\r\n                        <DatePicker\r\n                        selected={this.state.dateApplied}\r\n                        onChange={this.onChangeDateApplied}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label>Due date: </label>\r\n                    <div>\r\n                        <DatePicker\r\n                        selected={this.state.dateDeadline}\r\n                        onChange={this.onChangeDateDeadline}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\"> \r\n                    <label>Applied </label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        value={this.state.applied}\r\n                        onChange={this.onChangeApplied}/>\r\n                \r\n                    </div>\r\n                    \r\n                    <div className=\"form-group\">\r\n                    <label> Progress:</label> \r\n                    <select \r\n                        className=\"form-control\"\r\n                        value={this.state.progress}\r\n                        onChange={this.onChangeProgress}>\r\n                        {\r\n                        this.state.progressOptions.map(function(progress) {\r\n                        return <option key={progress._id} value={progress.progress}>{progress.progress}</option>;\r\n                        })\r\n                        }\r\n                    </select>\r\n                    </div>\r\n                    <div className=\"form-group\"> \r\n                    <label>My location: </label>\r\n                    <input  type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.userLocation}\r\n                        onChange={this.onChangeUserLocation}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label> Company Address:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        value={this.state.companyAddress}\r\n                        onChange={this.onChangeCompanyAddress}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Add company log\" className=\"btn btn-primary\" />\r\n                 \r\n                    </div>\r\n           \r\n                </form>\r\n                   </Modal.Body>\r\n                </div>\r\n           </Modal>\r\n           </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component, useEffect, useState} from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport CreateCompany from './CreateCompany';\r\n\r\n\r\nfunction Company(props){\r\n  const [data, setDistance] = useState([]);\r\n  /*    useEffect(() => {   \r\n          axios.get('/companies/distances/' + props.company._id)\r\n             .then(response =>   \r\n                     setDistance(response.data)\r\n            );\r\n         \r\n     },[props.company._id]);   */\r\n\r\n  return(\r\n    <tr>\r\n      {/*   <td className=\"fixedColumn\">{props.company.username}</td> */}\r\n        <td className=\"fixedColumn\">{props.company.companyName}</td>\r\n        <td>{props.company.positionName}</td>\r\n        <td>{props.company.jobPosting}</td>\r\n        <td>{props.company.jobDescription}</td>\r\n        <td>{props.company.dateApplied.substring(0,10)}</td>\r\n        <td>{props.company.dateDeadline.substring(0,10)}</td>\r\n        <td>{props.company.applied}</td>\r\n        <td className = {props.company.progress==='waiting' ? 'waiting' : props.company.progress==='interview' ? 'interview' : 'rejected' }>{props.company.progress}</td>\r\n        <td>{props.company.userLocation}</td>\r\n        <td>{props.company.companyAddress}</td>\r\n         <td> {data.distance}</td> \r\n        <td>{data.duration}</td> \r\n        <td>\r\n        <Link className=\"text-info\" to={\"/edit/\" + props.company._id}><i className=\"fa fa-pencil mainColor\"></i></Link> &nbsp;\r\n         <i className=\"fa fa-trash mainColor cursorPointer\" onClick={() => {props.deleteCompany(props.company._id)}}></i>\r\n        </td> \r\n    </tr>\r\n)\r\n}\r\n    \r\n\r\n\r\nexport default class CompaniesList extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.deleteCompany = this.deleteCompany.bind(this);\r\n        this.showModal = this.showModal.bind(this);\r\n        this.onClose = this.onClose.bind(this);\r\n        this.state = {\r\n            companies: [],\r\n            show: false\r\n            //users:[]\r\n        };\r\n    }\r\n\r\n    //get the list of companies from the db\r\n    componentDidMount(){\r\n    \r\n        axios.get('/companies/')\r\n            .then(response => {\r\n                this.setState({\r\n                    companies:response.data\r\n                    \r\n                })\r\n              \r\n            })\r\n            .catch((error)=>{\r\n                console.log(error);\r\n            })\r\n\r\n        //get the users\r\n        axios.get('/users/')\r\n        .then(response => {\r\n            if (response.data.length > 0){\r\n                this.setState({\r\n                    users: response.data\r\n                })\r\n            }\r\n        })\r\n        .catch((error)=>{\r\n            console.log(error);\r\n        });\r\n      \r\n    }\r\n    \r\n\r\n\r\n    \r\n\r\n    //companies list\r\n    companiesList(){\r\n        return this.state.companies.map(currentCompany=>{\r\n\r\n            return <Company company={currentCompany} deleteCompany={this.deleteCompany} key={currentCompany._id} />\r\n        })\r\n    }\r\n    //delete company\r\n    deleteCompany(id){\r\n        //1. delete the company from the database\r\n        axios.delete('/companies/' + id)\r\n            .then(response => console.log(response.data));\r\n        \r\n        //2. delete the company row from the table and update the table\r\n        this.setState({\r\n            companies: this.state.companies.filter(company => company._id !== id)\r\n        })\r\n    }\r\n\r\n\r\n        /* calculateDistance(usernameCompany){\r\n            //const companyUsername = this.state.companies.forEach(company => (company.username));\r\n            //console.log(companyUsername);\r\n        \r\n            //const companies = this.state.companies;\r\n            const users = this.state.users;\r\n        \r\n                for(var j=0; j < users.length; j++){\r\n                    var userName = users[j].username; \r\n                    //console.log(userName);\r\n                    if(usernameCompany === userName){\r\n                        var location = users[j].location;\r\n                    // console.log(location);\r\n                        return location;\r\n                    } \r\n                \r\n                }\r\n\r\n        };\r\n    */\r\n\r\n        showModal () {\r\n            this.setState({\r\n            show:  !this.state.show\r\n            });\r\n        };\r\n        onClose(e) {\r\n            this.props.onClose && this.props.onClose(e);\r\n\r\n        };\r\n\r\n    render(){\r\n        return(\r\n         <div className=\"container\">\r\n             \r\n              <button type=\"button\" className=\"btn colorButton float-right mb-4\"  title=\"Add a company\" onClick={e => {\r\n              this.showModal();}}><i className=\"fa fa-plus\" aria-hidden=\"true\"> Add</i>\r\n              </button> \r\n              <CreateCompany onClose={this.showModal} show={this.state.show} />\r\n           \r\n            \r\n              <table className=\"table tableCompanies table-hover \">\r\n                 <thead className=\"tableThead\">\r\n                     <tr>\r\n                        {/*  <th className=\"fixedColumn\">User Name</th> */}\r\n                         <th className=\"fixedColumn\">Company name</th>\r\n                         <th>Position name</th>\r\n                         <th>Position Link</th>\r\n                         <th>Job description</th>\r\n                         <th>Date applied</th>\r\n                         <th>Due date</th>\r\n                         <th>Application submitted</th>\r\n                         <th>Application progress</th>\r\n                         <th>My location</th>\r\n                         <th>Company Address</th> \r\n                         <th>Distance in km </th> \r\n                         <th>Duration by train </th> \r\n                         <th>Action options</th>\r\n                     </tr>\r\n                 </thead>\r\n                <tbody>\r\n                    {this.companiesList()}\r\n                </tbody>\r\n\r\n            </table>\r\n   \r\n            \r\n            \r\n           \r\n         </div>\r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport DatePicker from 'react-datepicker';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditCompany extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        //binding this to the properties from the state\r\n      /*   this.onChangeUsername = this.onChangeUsername.bind(this); */\r\n        this.onChangeUserLocation = this.onChangeUserLocation.bind(this);\r\n        this.onChangeCompanyName = this.onChangeCompanyName.bind(this);\r\n        this.onChangePositionName = this.onChangePositionName.bind(this);\r\n        this.onChangeJobPosting = this.onChangeJobPosting.bind(this);\r\n        this.onChangeJobDescription = this.onChangeJobDescription.bind(this);\r\n        this.onChangeApplied = this.onChangeApplied.bind(this);\r\n        this.onChangeDateApplied = this.onChangeDateApplied.bind(this);\r\n        this.onChangeDateDeadline = this.onChangeDateDeadline.bind(this);\r\n        this.onChangeProgress = this.onChangeProgress.bind(this);\r\n        this.onChangeCompanyAddress = this.onChangeCompanyAddress.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        //set the initial state of the component by assigning an object to this.state\r\n        //create properties inside the state that correspond to the properties from MOngoDB\r\n        this.state = {\r\n          /*   username: '', */\r\n            userLocation:'',\r\n            companyName:'',\r\n            positionName:'',\r\n            jobPosting:'',\r\n            jobDescription:'',\r\n            applied:'true',\r\n            dateApplied:new Date(),\r\n            dateDeadline:new Date(),\r\n            progress:'waiting',\r\n            companyAddress:'',\r\n            users:[], \r\n            progressOptions:[]\r\n        }\r\n    }\r\n\r\n    //add a lifecicle method to be called before the other methods are being called\r\n    //call the users\r\n    componentDidMount(){\r\n        //get the list of companies\r\n        axios.get('/companies/' + this.props.match.params.id)\r\n        .then(response => {\r\n                this.setState({\r\n                    /* username: response.data.username, */\r\n                    userLocation: response.data.userLocation,\r\n                    companyName:response.data.companyName,\r\n                    positionName:response.data.positionName,\r\n                    jobPosting:response.data.jobPosting,\r\n                    jobDescription:response.data.jobDescription,\r\n                    applied:response.data.applied,\r\n                    dateApplied:new Date(response.data.dateApplied),\r\n                    dateDeadline:new Date(response.data.dateDeadline),\r\n                    progress:response.data.progress,\r\n                    companyAddress:response.data.companyAddress,\r\n                    //users:[],\r\n                    appliedValues:response.data.appliedValues,\r\n                    progressValues:response.data.progressValues\r\n                })   \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n          })\r\n       \r\n        //get the list of users\r\n     /*    axios.get('http://localhost:5000/users/')\r\n            .then(response => {\r\n                if (response.data.length > 0){\r\n                    this.setState({\r\n                        users: response.data.map(user => user.username),\r\n                        //username: response.data[0].username\r\n                    })\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n              }) */\r\n\r\n        //get the list of progress options\r\n        axios.get('/progressOptions/')\r\n            .then(response => {\r\n                if (response.data.length > 0){\r\n                    this.setState({\r\n                        progressOptions: response.data,\r\n                    })\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                  console.log(error);\r\n            })\r\n\r\n     \r\n    }\r\n\r\n  \r\n    //when the form inputs are changed, the properties from the state will be updated\r\n /*    onChangeUsername(e){\r\n        this.setState({\r\n            username: e.target.value\r\n        });\r\n    } */\r\n    onChangeUserLocation(e){\r\n        this.setState({\r\n            userLocation: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n    onChangeCompanyName(e){\r\n        this.setState({\r\n            companyName: e.target.value\r\n        });\r\n    }\r\n    onChangePositionName(e){\r\n        this.setState({\r\n            positionName: e.target.value\r\n        });\r\n    }\r\n    onChangeJobPosting(e){\r\n        this.setState({\r\n            jobPosting: e.target.value\r\n        });\r\n    }\r\n    onChangeJobDescription(e){\r\n        this.setState({\r\n            jobDescription: e.target.value\r\n        });\r\n    }\r\n    onChangeApplied(e){\r\n        this.setState({\r\n            applied: e.target.value\r\n        });\r\n    }\r\n    onChangeDateApplied(date){\r\n        this.setState({\r\n            dateApplied: date\r\n        });\r\n    }\r\n    onChangeDateDeadline(date){\r\n        this.setState({\r\n            dateDeadline: date\r\n        });\r\n    }\r\n    onChangeProgress(e){\r\n        this.setState({\r\n            progress: e.target.value\r\n        });\r\n    }\r\n    onChangeCompanyAddress(e){\r\n        this.setState({\r\n            companyAddress: e.target.value\r\n        });\r\n    }\r\n\r\n    //on submit form\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n        const company = {\r\n        /*     username:this.state.username, */\r\n            userLocation:this.state.userLocation,\r\n            companyName:this.state.companyName,\r\n            positionName:this.state.positionName,\r\n            jobPosting:this.state.jobPosting,\r\n            jobDescription:this.state.jobDescription,\r\n            applied:this.state.applied,\r\n            dateApplied:this.state.dateApplied,\r\n            dateDeadline:this.state.dateDeadline,\r\n            progress:this.state.progress,\r\n            companyAddress:this.state.companyAddress,\r\n        }\r\n        console.log(company);\r\n        axios.post('/companies/update/' + this.props.match.params.id, company)\r\n              .then(res => console.log(res.data));\r\n\r\n        //once the user submits a company, he will be redirected to the home page\r\n        window.location = '/';\r\n    }\r\n\r\n    render(){\r\n        return(\r\n           <div className=\"container col-lg-6 shadowContainer\">\r\n               <h1>Edit company log</h1>\r\n            <form onSubmit={this.onSubmit}>\r\n                {/* \r\n                    <div className=\"form-group\"> \r\n                    <label>Username: </label>\r\n                    <select \r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.username}\r\n                       \r\n                        onChange={this.onChangeUsername}>\r\n                        {\r\n                            this.state.users.map(function(user) {\r\n                            return <option key={user} value={user}>{user}</option>;\r\n                            })\r\n                        }\r\n                    </select>\r\n                    </div> */}\r\n                \r\n                    <div className=\"form-group\"> \r\n                    <label>Company name: </label>\r\n                    <input  type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.companyName}\r\n                        onChange={this.onChangeCompanyName}\r\n                        />\r\n                    </div>\r\n                \r\n                    <div className=\"form-group\">\r\n                    <label> Position name:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        value={this.state.positionName}\r\n                        onChange={this.onChangePositionName}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label> Job Posting:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        value={this.state.jobPosting}\r\n                        onChange={this.onChangeJobPosting}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label> Job description:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        value={this.state.jobDescription}\r\n                        onChange={this.onChangeJobDescription}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label>Date applied: </label>\r\n                    <div>\r\n                        <DatePicker\r\n                        selected={this.state.dateApplied}\r\n                        onChange={this.onChangeDateApplied}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <label>Due date: </label>\r\n                    <div>\r\n                        <DatePicker\r\n                        selected={this.state.dateDeadline}\r\n                        onChange={this.onChangeDateDeadline}\r\n                        />\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label> Applied:</label>\r\n                    <input\r\n                        className=\"form-control\"\r\n                        value={this.state.applied}\r\n                        onChange={this.onChangeApplied}/>\r\n                \r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label> Progress:</label>\r\n                    <select \r\n                        className=\"form-control\"\r\n                        value={this.state.progress}\r\n                        onChange={this.onChangeProgress}>\r\n                        {\r\n                        this.state.progressOptions.map(function(progress) {\r\n                        return <option key={progress._id} value={progress.progress}>{progress.progress}</option>;\r\n                        })\r\n                        }\r\n                    </select>\r\n                    </div>\r\n                    <div className=\"form-group\"> \r\n                    <label>My location: </label>\r\n                    <input  type=\"text\"\r\n                        required\r\n                        className=\"form-control\"\r\n                        value={this.state.userLocation}\r\n                        onChange={this.onChangeUserLocation}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                    <label> Company Address:</label>\r\n                    <input \r\n                        type=\"text\" \r\n                        className=\"form-control\"\r\n                        value={this.state.companyAddress}\r\n                        onChange={this.onChangeCompanyAddress}\r\n                        />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                    <input type=\"submit\" value=\"Update company log\" className=\"btn colorButton\" />\r\n                    </div>\r\n                </form>\r\n\r\n           </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport axios from 'axios'; \r\n\r\nexport default class CreateQuestion extends Component{\r\n          constructor(props){\r\n            super(props)\r\n            this.onChangeQuestion = this.onChangeQuestion.bind(this);\r\n            this.onChangeAnswer = this.onChangeAnswer.bind(this);\r\n            this.onSubmit = this.onSubmit.bind(this);\r\n            this.state = {\r\n                question: '',\r\n                answer: ''\r\n            }\r\n        }\r\n        onChangeQuestion(e){\r\n            this.setState({\r\n                question: e.target.value\r\n            });\r\n        }\r\n        onChangeAnswer(e){\r\n            this.setState({\r\n                answer:e.target.value\r\n            });\r\n        }\r\n\r\n          //on submit form\r\n          onSubmit(e){\r\n            e.preventDefault();\r\n            const question = {\r\n                question:this.state.question,\r\n                answer:this.state.answer\r\n            }\r\n           \r\n            //send the user data to the backend\r\n            axios.post('/questions/add', question)\r\n              .then(res => console.log(res.data));\r\n            this.setState({\r\n                question: '',\r\n                answer:''\r\n              }) \r\n        }\r\n    render(){\r\n        return(\r\n    \r\n            <div className=\"card-body mx-auto col-lg-11 mb-3\">\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-row align-items-center\">\r\n                  <div className=\"col-md-5\">\r\n                    <input\r\n                        type=\"text\"\r\n                      value={this.state.question}\r\n                      onChange={this.onChangeQuestion}\r\n                      placeholder=\"Ask a new question\"\r\n                      className=\"form-control mb-2\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-5\">\r\n                    <input\r\n                        type=\"text\"\r\n                      value={this.state.answer}\r\n                      onChange={this.onChangeAnswer}\r\n                      placeholder=\"Post an answer\"\r\n                      className=\"form-control mb-2\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"col-md-2\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      value=\"Post a question\" className=\"btn colorButtonRegister\"\r\n                    >\r\n                      Register\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n \r\n       \r\n        )\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport \"font-awesome/css/font-awesome.min.css\";\r\nimport axios from 'axios';\r\n\r\nexport default class EditQuestion extends Component{\r\n    constructor(props){\r\n        super(props)\r\n        //binding this to the properties from the state\r\n        this.onChangeQuestion = this.onChangeQuestion.bind(this);\r\n        this.onChangeAnswer = this.onChangeAnswer.bind(this);\r\n        this.handleClose = this.handleClose.bind(this); \r\n        \r\n        this.onSubmit = this.onSubmit.bind(this);\r\n        //set the initial state of the component by assigning an object to this.state\r\n        //create properties inside the state that correspond to the properties from MOngoDB\r\n        this.state = {\r\n            question:'',\r\n            answer:''\r\n          \r\n        }\r\n    }\r\n\r\n    //add a lifecicle method to be called before the other methods are being called\r\n    componentDidMount(){\r\n        //get the question\r\n   axios.get('/questions/' + this.props.id)\r\n        .then(response => {\r\n                this.setState({\r\n                    question: response.data.question,\r\n                    answer:response.data.answer\r\n                })   \r\n        })\r\n        .catch(function (error) {\r\n            console.log(error);\r\n          })  \r\n      \r\n    } \r\n\r\n    //Close the modal\r\n    handleClose = e => {\r\n        this.props.handleClose && this.props.handleClose(e);\r\n    };\r\n\r\n    onChangeQuestion(e){\r\n        this.setState({\r\n            question: e.target.value\r\n        });\r\n    }\r\n\r\n\r\n    onChangeAnswer(e){\r\n        this.setState({\r\n            answer: e.target.value\r\n        });\r\n    }\r\n   \r\n\r\n    //on submit form\r\n    onSubmit(e){\r\n        e.preventDefault();\r\n   \r\n        const question = {\r\n            question:this.state.question,\r\n            answer:this.state.answer\r\n        }\r\n        axios.post('/questions/update/' + this.props.id, question)\r\n        .then(res => console.log(res.data));\r\n\r\n\r\n   window.location = '/questions';\r\n      \r\n        \r\n    }\r\n\r\n    render(){\r\n        if(!this.props.onShow){\r\n            return null;\r\n        }\r\n        return(\r\n            <div>\r\n            {this.props.children}  \r\n   \r\n          <div className=\"container\">\r\n          <h5>Edit question</h5>\r\n         \r\n            <form onSubmit={this.onSubmit}>\r\n        \r\n              <div className=\"form-group\"> \r\n              <input  type=\"text\"\r\n                  required\r\n                  className=\"form-control\"\r\n                  value={this.state.question}\r\n                  onChange={this.onChangeQuestion}\r\n                  />\r\n              </div>\r\n          \r\n              <div className=\"form-group\">\r\n              <input \r\n                  type=\"text\" \r\n                  className=\"form-control\"\r\n                  value={this.state.answer}\r\n                  onChange={this.onChangeAnswer}\r\n                  />\r\n              </div>\r\n\r\n              <div className=\"form-group\">\r\n              <input type=\"submit\" value=\"Update question\" className=\"btn colorButton\" />\r\n              </div>\r\n          </form>\r\n             </div>\r\n        \r\n     </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, {Component} from 'react';\r\nimport EditQuestion from './EditQuestion';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class QuestionList extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.showEditQuestion = this.showEditQuestion.bind(this);\r\n        //this.getQuestion = this.getQuestion.bind(this);\r\n        this.state = {\r\n            onShow:false,\r\n            questions: []\r\n           \r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        axios.get('/questions/')\r\n            .then(response => {\r\n                if (response.data.length > 0){\r\n                    this.setState({\r\n                        questions: response.data\r\n                    })\r\n                }\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n              })\r\n    }\r\n\r\n  /*   getQuestion(id){\r\n        return this.state.questions.find(question => question._id === id);\r\n    } */\r\n \r\n    showEditQuestion () {\r\n        this.setState({\r\n        onShow:  !this.state.onShow\r\n        });\r\n    };\r\n\r\n   render(){\r\n   return(\r\n\r\n       <div className=\"card-column\">\r\n        \r\n        {this.state.questions.map(question => \r\n        <div key={question._id} className=\"card-body cardDiv text-center shadowCard\" >\r\n        <h5 className=\"card-title mainColor\">{question.question}</h5>\r\n        <hr />\r\n        <div className=\"mb-3\"> <q className=\"card-text\"> {question.answer}</q></div>\r\n        <div>\r\n      \r\n        {this.state.onShow ? <i className=\"fa fa-times mainColor cursorPointer marginTop float-right\" onClick={() => {\r\n        this.showEditQuestion()  }}></i> : <i className=\"fa fa-pencil mainColor cursorPointer marginTop float-right\" onClick={() => {\r\n        this.showEditQuestion() }} ></i>  } \r\n     \r\n        <hr ></hr>\r\n      \r\n          <EditQuestion onShow={this.state.onShow}  id={question._id}  />\r\n       \r\n          \r\n            </div>\r\n      </div>\r\n\r\n       \r\n        )}\r\n        </div>\r\n        \r\n        \r\n   \r\n    )\r\n}\r\n}","import React, {Component} from 'react';\r\nimport CreateQuestion from \"./CreateQuestion\";\r\nimport QuestionList from \"./QuestionList\";\r\n\r\n\r\n\r\nexport default class Questions extends Component{\r\n\r\n    render(){\r\n        return(\r\n         <div className=\"container\">  \r\n         <CreateQuestion />      \r\n           \r\n        <QuestionList />\r\n      \r\n             </div>\r\n\r\n   \r\n        )\r\n    }\r\n}","import React from 'react';\nimport './App.css';\nimport {BrowserRouter as Router, Route} from \"react-router-dom\";\nimport 'jquery/dist/jquery.slim';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport '@fortawesome/fontawesome-free';\n\nimport Navbar from \"./components/Navbar\"\nimport CompaniesList from \"./components/CompaniesList\"\nimport EditCompany from \"./components/EditCompany\"\nimport CreateCompany from \"./components/CreateCompany\"\n/* import Users from \"./components/Users\" */\nimport QuestionsList from \"./components/QuestionsList\"\nimport EditQuestion from './components/EditQuestion';\n\nfunction App() {\n  return (\n   //Map specific url paths to different components\n    <Router>\n      <div >\n      <Navbar />\n      <br/>\n      <Route path=\"/\" exact component={CompaniesList}/>\n      <Route path=\"/edit/:id\" component={EditCompany}/>\n      <Route path=\"/create\" component={CreateCompany}/>\n     {/*  <Route path=\"/users\" component={Users} /> */}\n      <Route path=\"/questions\" component={QuestionsList} /> <Route path=\"/editQuestion/:id\" component={EditQuestion} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}